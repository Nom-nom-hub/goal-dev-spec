    def _generate_gitlab_pipeline(self, pipeline_type: str, config: Dict) -> str:\n        \"\"\"Generate GitLab CI/CD pipeline\"\"\"\n        project_name = config.get(\"project_name\", \"project\")\n        \n        pipeline = \"\"\"stages:\n  - test\n  - deploy\n\nvariables:\n  PIP_CACHE_DIR: \"$CI_PROJECT_DIR/.cache/pip\"\n\ncache:\n  paths:\n    - .cache/pip\n    - venv/\n\nbefore_script:\n  - python -V\n  - pip install virtualenv\n  - virtualenv venv\n  - source venv/bin/activate\n  - pip install -e .\n\"\"\"\n        \n        if pipeline_type == \"ci\" or pipeline_type == \"cicd\":\n            pipeline += \"\"\"\ntest:\n  stage: test\n  script:\n    - pip install pytest pytest-cov\n    - pytest --cov=. --cov-report=xml\n  coverage: '/TOTAL.*\\\\s+(\\\\d+%)$/'\n  artifacts:\n    reports:\n      coverage_report:\n        coverage_format: cobertura\n        path: coverage.xml\n\n\"\"\"\n\n        \n        if pipeline_type == \"cd\" or pipeline_type == \"cicd\":\n            pipeline += f\"\"\"\ndeploy:\n  stage: deploy\n  script:\n    - echo \"Deploying {project_name} to production\"\n    # Add deployment commands here\n  only:\n    - main\n\"\"\"\n        \n        return pipeline