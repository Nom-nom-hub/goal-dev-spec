name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest-8-cores, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create virtual environment and install package
      run: |
        uv venv
        ${{ matrix.os == 'windows-latest' && '.venv\Scripts\activate' || 'source .venv/bin/activate' }}
        uv pip install -e ".[dev]"
      timeout-minutes: 15

    - name: Run linter
      run: |
        ${{ matrix.os == 'windows-latest' && '.venv\Scripts\activate &&' || 'source .venv/bin/activate &&' }}
        uv run ruff check src/

    - name: Run type checker
      run: |
        ${{ matrix.os == 'windows-latest' && '.venv\Scripts\activate &&' || 'source .venv/bin/activate &&' }}
        uv run mypy src/
      timeout-minutes: 10